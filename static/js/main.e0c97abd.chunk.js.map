{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","event","delete","id","fontSize","CreateArea","useState","newNote","setNewNote","isExpanded","setIsExpanded","handleChange","target","name","value","prevValues","placeholder","onChange","rows","onFocus","Zoom","in","Fab","createNote","preventDefault","App","notesList","setNotesList","deleteNote","filter","note","index","newTitle","newContent","map","key","ReactDOM","render","document","getElementById"],"mappings":"uPAceA,MAXf,WACE,OACE,gCACE,4BACE,kBAAC,IAAD,MADF,WCKSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,K,iBCYPG,MAff,SAAcC,GAIZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAPQ,SAAAC,GAClBL,EAAMM,OAAON,EAAMO,MAOf,kBAAC,IAAD,CAAYC,SAAS,a,yCC2CdC,MAlDf,SAAoBT,GAAQ,IAAD,EACKU,mBAAS,CAAER,MAAO,GAAIC,QAAS,KADpC,mBAClBQ,EADkB,KACTC,EADS,OAEWF,oBAAS,GAFpB,mBAElBG,EAFkB,KAENC,EAFM,KAInBC,EAAe,SAAAV,GAAU,IAAD,EACJA,EAAMW,OAAtBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACdN,GAAW,SAAAO,GAAU,kCAAUA,GAAV,IAAsB,CAACF,GAAOC,QAerD,OACE,6BACE,8BACGL,GACC,2BACEI,KAAK,QACLG,YAAY,QACZC,SAAUN,EACVG,MAAOP,EAAQT,QAGnB,8BACEe,KAAK,UACLG,YAAY,iBACZE,KAAMT,EAAa,IAAM,IACzBQ,SAAUN,EACVG,MAAOP,EAAQR,QACfoB,QArBO,WACbT,GAAeD,MAsBX,kBAACW,EAAA,EAAD,CAAMC,GAAG,QACP,kBAACC,EAAA,EAAD,CAAKzB,UAAU,cAAcG,QAhCjB,SAAAC,GACI,KAAlBM,EAAQT,OAAoC,KAApBS,EAAQR,SAClCH,EAAM2B,WAAWhB,EAAQT,MAAOS,EAAQR,SAC1CE,EAAMuB,iBACNhB,EAAW,CAAEV,MAAO,GAAIC,QAAS,KACjCW,GAAeD,KA4BP,kBAAC,IAAD,CAASL,SAAS,gBCDfqB,MAxCf,WAAgB,IAAD,EACqBnB,mBAAS,CAAC,CAAER,MAAO,GAAIC,QAAS,MADrD,mBACN2B,EADM,KACKC,EADL,KAYPC,EAAa,SAAAzB,GACjBwB,GAAa,SAAAZ,GAAU,OACrBA,EAAWc,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAU5B,SAIjD,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYoB,WAlBA,SAACS,EAAUC,GACzB,IAAM1B,EAAU,CACdT,MAAOkC,EACPjC,QAASkC,GAGXN,GAAa,SAAAZ,GAAU,4BAAQA,GAAR,CAAoBR,UAcxCmB,EAAUQ,KAAI,SAACJ,EAAMC,GACpB,GAAmB,KAAfD,EAAKhC,OAAiC,KAAjBgC,EAAK/B,QAC5B,OACE,kBAAC,EAAD,CACEoC,IAAKJ,EACL5B,GAAI4B,EACJjC,MAAOgC,EAAKhC,MACZC,QAAS+B,EAAK/B,QACdG,OAAQ0B,OAIhB,kBAAC,EAAD,QCrCNQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e0c97abd.chunk.js","sourcesContent":["import React from \"react\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <NoteIcon />\n        Notes\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  const handleClick = event => {\n    props.delete(props.id);\n  };\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>\n        <DeleteIcon fontSize=\"small\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\n\nfunction CreateArea(props) {\n  const [newNote, setNewNote] = useState({ title: \"\", content: \"\" });\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setNewNote(prevValues => ({ ...prevValues, [name]: value }));\n  };\n\n  const handleClick = event => {\n    if (newNote.title !== \"\" || newNote.content !== \"\")\n      props.createNote(newNote.title, newNote.content);\n    event.preventDefault();\n    setNewNote({ title: \"\", content: \"\" });\n    setIsExpanded(!isExpanded);\n  };\n\n  const expand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <div>\n      <form>\n        {isExpanded && (\n          <input\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            value={newNote.title}\n          />\n        )}\n        <textarea\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? \"3\" : \"1\"}\n          onChange={handleChange}\n          value={newNote.content}\n          onFocus={expand}\n        />\n        <Zoom in=\"true\">\n          <Fab className=\"form-button\" onClick={handleClick}>\n            <AddIcon fontSize=\"medium\" />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notesList, setNotesList] = useState([{ title: \"\", content: \"\" }]);\n\n  const addNote = (newTitle, newContent) => {\n    const newNote = {\n      title: newTitle,\n      content: newContent\n    };\n\n    setNotesList(prevValues => [...prevValues, newNote]);\n  };\n\n  const deleteNote = id => {\n    setNotesList(prevValues =>\n      prevValues.filter((note, index) => index !== id)\n    );\n  };\n\n  return (\n    <div>\n      <Header />\n      <CreateArea createNote={addNote} />\n      {/* eslint-disable-next-line  */}\n      {notesList.map((note, index) => {\n        if (note.title !== \"\" || note.content !== \"\")\n          return (\n            <Note\n              key={index}\n              id={index}\n              title={note.title}\n              content={note.content}\n              delete={deleteNote}\n            />\n          );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}